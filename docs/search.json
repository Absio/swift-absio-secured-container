{"Structs/SecuredContainer.html#/s:11AbsioSDKiOS16SecuredContainerV12securedBytes10Foundation4DataVSgvp":{"name":"securedBytes","abstract":"<p>The the secured bytes of this SecuredContainer.</p>","parent_name":"SecuredContainer"},"Structs/SecuredContainer.html#/s:11AbsioSDKiOS16SecuredContainerV6lengthSivp":{"name":"length","abstract":"<p>The length of the encypted data.</p>","parent_name":"SecuredContainer"},"Structs/SecuredContainer.html#/s:11AbsioSDKiOS16SecuredContainerV12accessLevelsSDy10Foundation4UUIDVAA11AccessLevelCGvp":{"name":"accessLevels","abstract":"<p>accessLevels</p>","parent_name":"SecuredContainer"},"Structs/SecuredContainer.html#/s:11AbsioSDKiOS16SecuredContainerV8metadataAA0E8MetadataVvp":{"name":"metadata","abstract":"<p>The ContainerMetadata associated with the container.</p>","parent_name":"SecuredContainer"},"Structs/Permissions.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV16decryptContainerACvpZ":{"name":"decryptContainer","abstract":"<p>Permission to decrypt the SecuredContainer header and content.</p>","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV15uploadContainerACvpZ":{"name":"uploadContainer","abstract":"<p>Permission to modify the SecuredContainer header and content and upload to the server.</p>","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV10viewAccessACvpZ":{"name":"viewAccess","abstract":"<p>Permission to view the access list for the SecuredContainer.</p>","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV12modifyAccessACvpZ":{"name":"modifyAccess","abstract":"<p>Permission to modify the access list for the SecuredContainer.</p>","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV19modifyContainerTypeACvpZ":{"name":"modifyContainerType","abstract":"<p>Permission to modify the categorical type of the SecuredContainer.</p>","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV17viewContainerTypeACvpZ":{"name":"viewContainerType","abstract":"<p>Permission to view the categorical type of the SecuredContainer.</p>","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV19receiveAccessEventsACvpZ":{"name":"receiveAccessEvents","abstract":"<p>Container (type) Access (action) events are controlled by the presence of the RX_ACCESS_EVENTS permission flag.</p>","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV8rawValueACSi_tcfc":{"name":"init(rawValue:)","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV17defaultForCreatorACyFZ":{"name":"defaultForCreator()","abstract":"<p>Creator have a all set of permissions by default.</p>","parent_name":"Permissions"},"Structs/Permissions.html#/s:11AbsioSDKiOS11PermissionsV20defaultForReciepientACyFZ":{"name":"defaultForReciepient()","abstract":"<p>Recipients have a limited set of permissions by default.</p>","parent_name":"Permissions"},"Structs/PublicKey.html#/s:11AbsioSDKiOS9PublicKeyV7keyType0a7CryptoiC00eG0Ovp":{"name":"keyType","abstract":"<p>The type of key.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:11AbsioSDKiOS9PublicKeyV6userId10Foundation4UUIDVSgvp":{"name":"userId","abstract":"<p>The user ID of the owner of this key.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:11AbsioSDKiOS9PublicKeyV3keySSvp":{"name":"key","abstract":"<p>The actual key.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:11AbsioSDKiOS9PublicKeyV6activeSbvp":{"name":"active","abstract":"<p>Flag which show if given key is active or not</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:11AbsioSDKiOS9PublicKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Returns a Boolean indicating whether the PublicKeys are identical.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:11AbsioSDKiOS9PublicKeyV4hash4intoys6HasherVz_tF":{"name":"hash(into:)","abstract":"<p>Hash value</p>","parent_name":"PublicKey"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV6actionAA10ActionTypeOSgvp":{"name":"action","abstract":"<p>Event actions.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV7changesSSSgvp":{"name":"changes","abstract":"<p>Contains a list of changes made to an Container and its ContainerAccessLevel stored on the Absio Broker™ application.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV13clientAppNameSSSgvp":{"name":"clientAppName","abstract":"<p>The client application which triggered the event.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV18containerExpiredAt10Foundation4DateVSgvp":{"name":"containerExpiredAt","abstract":"<p>When access to the container expired.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV11containerId10Foundation4UUIDVSgvp":{"name":"containerId","abstract":"<p>The container ID.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV19containerModifiedAt10Foundation4DateVSgvp":{"name":"containerModifiedAt","abstract":"<p>When the container was modified at.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV13containerTypeSSSgvp":{"name":"containerType","abstract":"<p>The categorical type of the container.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV4date10Foundation4DateVSgvp":{"name":"date","abstract":"<p>Date of event creation.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV7eventIdSiSgvp":{"name":"eventId","abstract":"<p>The ID of the event</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV13relatedUserId10Foundation4UUIDVSgvp":{"name":"relatedUserId","abstract":"<p>The ID of the user that triggered the event.</p>","parent_name":"Event"},"Structs/Event.html#/s:11AbsioSDKiOS5EventV4typeAA0D4TypeOSgvp":{"name":"type","abstract":"<p>Event type.</p>","parent_name":"Event"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV9createdAt10Foundation4DateVSgvp":{"name":"createdAt","abstract":"<p>The date and time the container was created.</p>","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV9createdBy10Foundation4UUIDVSgvp":{"name":"createdBy","abstract":"<p>The ID of the user who created the container.</p>","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV6lengthSiSgvp":{"name":"length","abstract":"<p>The length of the SecuredContainer in bytes (as it would be on disk).</p>","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV10modifiedAt10Foundation4DateVSgvp":{"name":"modifiedAt","abstract":"<p>The date and time the container was last modified.  This will be null if the container has never been modified.</p>","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV10modifiedBy10Foundation4UUIDVSgvp":{"name":"modifiedBy","abstract":"<p>The ID of the user who last modified the container.  This will be null if the container has never been modified.</p>","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV4typeSSSgvp":{"name":"type","abstract":"<p>A string used to categorize the container.</p>","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV11containerId10Foundation4UUIDVSgvp":{"name":"containerId","abstract":"<p>The ID of the container.</p>","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV03getE8WithType4typeACSSSg_tF":{"name":"getMetadataWithType(type:)","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV011getModifiedE010modifiedAt0H2ByAC10Foundation4DateV_AG4UUIDVtF":{"name":"getModifiedMetadata(modifiedAt:modifiedBy:)","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html#/s:11AbsioSDKiOS17ContainerMetadataV010getCreatedE09createdAt0H2ByAC10Foundation4DateV_AG4UUIDVtF":{"name":"getCreatedMetadata(createdAt:createdBy:)","parent_name":"ContainerMetadata"},"Structs/ContainerMetadata.html":{"name":"ContainerMetadata","abstract":"<p>Descriptive information about a SecuredContainer/IContainer, including access, timestamps, length, categorical type and the ID."},"Structs/Event.html":{"name":"Event","abstract":"<p>Represents a Container-related event tracked by the Absio Broker™ application.</p>"},"Structs/PublicKey.html":{"name":"PublicKey","abstract":"<p>Public key representation</p>"},"Structs/Permissions.html":{"name":"Permissions","abstract":"<p>Represents various permissions that can be granted to a user with access to a SecuredContainer."},"Structs/SecuredContainer.html":{"name":"SecuredContainer","abstract":"<p>This contains the Absio format of the encrypted content and header, its length, access levels corresponding metadata.</p>"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP9getUserId10Foundation4UUIDVyKF":{"name":"getUserId()","abstract":"<p>Gets user id for current key ring</p>","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP10getKeyRing0a7CryptoiC00fG0VyKF":{"name":"getKeyRing()","abstract":"<p>The KeyRing for the authenticated user.  This will be null if the Provider is not authenticated.</p>","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP15createContainer7content12accessLevels4type10PromiseKit0K0CyAA07SecuredF0VG10Foundation4DataVSg_SayAA11AccessLevelCGSSSgtKF":{"name":"createContainer(content:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP15createContainer7content18customHeaderObject12accessLevels4type10PromiseKit0N0CyAA07SecuredF0VG10Foundation4DataVSg_qd__SgSayAA11AccessLevelCGSSSgtKSeRd__SERd__lF":{"name":"createContainer(content:customHeaderObject:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP21updateContainerHeader11containerId06customG6Object10PromiseKit0L0CyAA07SecuredF0VG10Foundation4UUIDV_qd__SgtKSeRd__SERd__lF":{"name":"updateContainerHeader(containerId:customHeaderObject:)","abstract":"<p>Update the header of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP22updateContainerContent11containerId7content10PromiseKit0K0CyAA07SecuredF0VG10Foundation4UUIDV_AM4DataVSgtKF":{"name":"updateContainerContent(containerId:content:)","abstract":"<p>Update the content of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP15updateContainer11containerId7content18customHeaderObject12accessLevels4type10PromiseKit0P0CyAA07SecuredF0VG10Foundation4UUIDV_AP4DataVSgqd__SgSayAA11AccessLevelCGSSSgtKSeRd__SERd__lF":{"name":"updateContainer(containerId:content:customHeaderObject:accessLevels:type:)","abstract":"<p>Update the content, header, access and type of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP27updateContainerAccessLevels11containerId06accessH010PromiseKit0L0CyytG10Foundation4UUIDV_SayAA0G5LevelCGtKF":{"name":"updateContainerAccessLevels(containerId:accessLevels:)","abstract":"<p>Update the access of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP12getContainer11containerId10PromiseKit0I0CyAA0F0CG10Foundation4UUIDV_tKF":{"name":"getContainer(containerId:)","abstract":"<p>Fetches an container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP18getContainerHeader11containerId10PromiseKit0J0Cy0a7CryptoiC00G0CSgG10Foundation4UUIDV_tKF":{"name":"getContainerHeader(containerId:)","abstract":"<p>Gets the decrypted header for a secured container.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP19getContainerContent11containerId10PromiseKit0J0Cy10Foundation4DataVSgGAI4UUIDV_tKF":{"name":"getContainerContent(containerId:)","abstract":"<p>Gets the decrypted content for a secured container.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP20getContainerMetadata11containerId10PromiseKit0J0CyAA0F0CG10Foundation4UUIDV_tKF":{"name":"getContainerMetadata(containerId:)","abstract":"<p>Gets the metadata for a secured container.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP15deleteContainer11containerId10PromiseKit0I0CyytG10Foundation4UUIDV_tKF":{"name":"deleteContainer(containerId:)","abstract":"<p>Deletes the secured container with the given ID from the Absio Broker application.  The encrypted content and associated","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP19updateContainerType11containerId4type10PromiseKit0K0CyytG10Foundation4UUIDV_SSSgtKF":{"name":"updateContainerType(containerId:type:)","abstract":"<p>Update the type of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP6logout10PromiseKit0F0CyytGyKF":{"name":"logout()","abstract":"<p>This will end an authenticated session.  The KeyRing and the authenticated credentials on the rest client","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP10deleteUser10PromiseKit0G0CyytGyKF":{"name":"deleteUser()","abstract":"<p>Deletes all associated data for the authenticated user.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP15createContainer7content12accessLevels4type17completionHandler05errorL05queuex10Foundation4DataVSg_SayAA11AccessLevelCGSSSgyAA07SecuredF0Vcys5Error_pcSo0c10_dispatch_N0CSgtKF":{"name":"createContainer(content:accessLevels:type:completionHandler:errorHandler:queue:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP15createContainer7content18customHeaderObject12accessLevels4type17completionHandler05errorO05queuex10Foundation4DataVSg_qd__SgSayAA11AccessLevelCGSSSgyAA07SecuredF0Vcys5Error_pcSo0c10_dispatch_Q0CSgtKSeRd__SERd__lF":{"name":"createContainer(content:customHeaderObject:accessLevels:type:completionHandler:errorHandler:queue:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP21updateContainerHeader11containerId06customG6Object17completionHandler05errorM05queuex10Foundation4UUIDV_qd__SgyAA07SecuredF0Vcys5Error_pcSo0c10_dispatch_O0CSgtKSeRd__SERd__lF":{"name":"updateContainerHeader(containerId:customHeaderObject:completionHandler:errorHandler:queue:)","abstract":"<p>Update the header of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP22updateContainerContent11containerId7content17completionHandler05errorL05queuex10Foundation4UUIDV_AJ4DataVSgyAA07SecuredF0Vcys5Error_pcSo0c10_dispatch_N0CSgtKF":{"name":"updateContainerContent(containerId:content:completionHandler:errorHandler:queue:)","abstract":"<p>Update the content of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP15updateContainer11containerId7content18customHeaderObject12accessLevels4type17completionHandler05errorQ05queuex10Foundation4UUIDV_AM4DataVSgqd__SgSayAA11AccessLevelCGSSSgyAA07SecuredF0Vcys5Error_pcSo0c10_dispatch_S0CSgtKSeRd__SERd__lF":{"name":"updateContainer(containerId:content:customHeaderObject:accessLevels:type:completionHandler:errorHandler:queue:)","abstract":"<p>Update the content, header, access and type of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP27updateContainerAccessLevels11containerId06accessH017completionHandler05errorM05queuex10Foundation4UUIDV_SayAA0G5LevelCGyycys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"updateContainerAccessLevels(containerId:accessLevels:completionHandler:errorHandler:queue:)","abstract":"<p>Update the access of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP12getContainer11containerId17completionHandler05errorJ05queuex10Foundation4UUIDV_yAA0F0Ccys5Error_pcSo0c10_dispatch_L0CSgtKF":{"name":"getContainer(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Fetches an container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP18getContainerHeader11containerId17completionHandler05errorK05queuex10Foundation4UUIDV_y0a7CryptoiC00G0CSgcys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"getContainerHeader(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Gets the decrypted header for a secured container.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP19getContainerContent11containerId17completionHandler05errorK05queuex10Foundation4UUIDV_yAI4DataVSgcys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"getContainerContent(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Gets the decrypted content for a secured container.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP20getContainerMetadata11containerId17completionHandler05errorK05queuex10Foundation4UUIDV_yAA0F0Ccys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"getContainerMetadata(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Gets the metadata for a secured container.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP15deleteContainer11containerId17completionHandler05errorJ05queuex10Foundation4UUIDV_yycys5Error_pcSo0c10_dispatch_L0CSgtKF":{"name":"deleteContainer(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Deletes the secured container with the given ID from the Absio Broker application.  The encrypted content and associated","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP19updateContainerType11containerId4type17completionHandler05errorL05queuex10Foundation4UUIDV_SSSgyycys5Error_pcSo0c10_dispatch_N0CSgtKF":{"name":"updateContainerType(containerId:type:completionHandler:errorHandler:queue:)","abstract":"<p>Update the type of the secured container with the given ID.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP6logout17completionHandler05errorG05queuexyyc_ys5Error_pcSo0c10_dispatch_I0CSgtKF":{"name":"logout(completionHandler:errorHandler:queue:)","abstract":"<p>This will end an authenticated session.  The KeyRing and the authenticated credentials on the rest client","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html#/s:11AbsioSDKiOS0A8ProviderP10deleteUser17completionHandler05errorH05queuexyyc_ys5Error_pcSo0c10_dispatch_J0CSgtKF":{"name":"deleteUser(completionHandler:errorHandler:queue:)","abstract":"<p>Deletes all associated data for the authenticated user.","parent_name":"AbsioProvider"},"Protocols/AbsioProvider.html":{"name":"AbsioProvider","abstract":"<p>Implement this protocol to provide basic functionality for any provider</p>"},"Enums/AbsioError.html#/s:11AbsioSDKiOS0A5ErrorO11descriptionSSvp":{"name":"description","abstract":"<p>Gets error description</p>","parent_name":"AbsioError"},"Enums/AbsioError.html#/s:10Foundation14LocalizedErrorP16errorDescriptionSSSgvp":{"name":"errorDescription","parent_name":"AbsioError"},"Enums.html#/s:11AbsioSDKiOS10ActionTypeO":{"name":"ActionType","abstract":"<p>Enumeration for event actions.</p>"},"Enums.html#/s:11AbsioSDKiOS9EventTypeO":{"name":"EventType","abstract":"<p>Enumeration for event type.</p>"},"Enums/AbsioError.html":{"name":"AbsioError","abstract":"<p>AbsioError is a top layer class for error handling"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC6apiKey10Foundation4UUIDVvp":{"name":"apiKey","abstract":"<p>The API Key needed for accessing the Absio Broker application</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC15applicationNameSSvp":{"name":"applicationName","abstract":"<p>A unique name for the application.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC9serverUrl10Foundation3URLVvp":{"name":"serverUrl","abstract":"<p>The URL of the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC6apiKey9serverUrl15applicationNameACSS_10Foundation3URLVSStKcfc":{"name":"init(apiKey:serverUrl:applicationName:)","abstract":"<div class=\"aside aside-throws\">","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC6apiKey9serverUrl15applicationNameAC10Foundation4UUIDV_AG3URLVSStKcfc":{"name":"init(apiKey:serverUrl:applicationName:)","abstract":"<div class=\"aside aside-throws\">","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC15createContainer7content12accessLevels4type10PromiseKit0L0CyAA07SecuredG0VG10Foundation4DataVSg_SayAA11AccessLevelCGSSSgtKF":{"name":"createContainer(content:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC15createContainer7content18customHeaderObject12accessLevels4type10PromiseKit0O0CyAA07SecuredG0VG10Foundation4DataVSg_xSgSayAA11AccessLevelCGSSSgtKSeRzSERzlF":{"name":"createContainer(content:customHeaderObject:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC21updateContainerHeader11containerId06customH6Object10PromiseKit0M0CyAA07SecuredG0VG10Foundation4UUIDV_xSgtKSeRzSERzlF":{"name":"updateContainerHeader(containerId:customHeaderObject:)","abstract":"<p>Update the header of the secured container with the given ID.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC22updateContainerContent11containerId7content10PromiseKit0L0CyAA07SecuredG0VG10Foundation4UUIDV_AM4DataVSgtKF":{"name":"updateContainerContent(containerId:content:)","abstract":"<p>Update the content of the secured container with the given ID.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC15updateContainer11containerId7content18customHeaderObject12accessLevels4type10PromiseKit0Q0CyAA07SecuredG0VG10Foundation4UUIDV_AP4DataVSgxSgSayAA11AccessLevelCGSSSgtKSeRzSERzlF":{"name":"updateContainer(containerId:content:customHeaderObject:accessLevels:type:)","abstract":"<p>Update the content, header, access and type of the secured container with the given ID.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC27updateContainerAccessLevels11containerId06accessI010PromiseKit0M0CyytG10Foundation4UUIDV_SayAA0H5LevelCGtKF":{"name":"updateContainerAccessLevels(containerId:accessLevels:)","abstract":"<p>Update the access of the secured container with the given ID.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC19updateContainerType11containerId4type10PromiseKit0L0CyytG10Foundation4UUIDV_SSSgtKF":{"name":"updateContainerType(containerId:type:)","abstract":"<p>Update the type of the secured container with the given ID.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC12getContainer11containerId10PromiseKit0J0CyAA0G0CG10Foundation4UUIDV_tKF":{"name":"getContainer(containerId:)","abstract":"<p>Fetches an container with the given ID.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC18getContainerHeader11containerId10PromiseKit0K0Cy0a7CryptoiC00H0CSgG10Foundation4UUIDV_tKF":{"name":"getContainerHeader(containerId:)","abstract":"<p>Gets the decrypted header for a secured container.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC19getContainerContent11containerId10PromiseKit0K0Cy10Foundation4DataVSgGAI4UUIDV_tKF":{"name":"getContainerContent(containerId:)","abstract":"<p>Gets the decrypted content for a secured container.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC20getContainerMetadata11containerId10PromiseKit0K0CyAA0G0CG10Foundation4UUIDV_tKF":{"name":"getContainerMetadata(containerId:)","abstract":"<p>Gets the metadata for a secured container.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC15deleteContainer11containerId10PromiseKit0J0CyytG10Foundation4UUIDV_tKF":{"name":"deleteContainer(containerId:)","abstract":"<p>Deletes the secured container with the given ID from the Absio Broker application.  The encrypted content and associated","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC19getSecuredContainer11containerId10PromiseKit0K0CyAA0gH0VG10Foundation4UUIDV_tKF":{"name":"getSecuredContainer(containerId:)","abstract":"<p>This will get the secured container and associated metadata from the Absio Broker application.  No decryption will be performed.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC8register8password10passphrase8reminder10PromiseKit0J0Cy10Foundation4DataVGSS_S2SSgtKF":{"name":"register(password:passphrase:reminder:)","abstract":"<p>This will create a new user stored on the Absio Broker application.  A KeyRing and UserId will be created for the user.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC17changeCredentials8password10passphrase8reminder10PromiseKit0K0Cy10Foundation4DataVGSS_S2SSgtKF":{"name":"changeCredentials(password:passphrase:reminder:)","abstract":"<p>This is used to change the password and/or passphrase of a user.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC5logIn6userId8password10passphrase10PromiseKit0L0Cy10Foundation4DataVGAK4UUIDV_SSSgAQtKF":{"name":"logIn(userId:password:passphrase:)","abstract":"<p>Authenticates the user with the Absio Broker application by decrypting the KeyFile.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC10deleteUser10PromiseKit0H0CyytGyKF":{"name":"deleteUser()","abstract":"<p>Deletes all associated data for the authenticated user.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC13getPublicKeys6userId7keyType5index10PromiseKit0N0CySayAA0G3KeyVGG10Foundation4UUIDVSg_0a7CryptoiC00pL0OSgSiSgtKF":{"name":"getPublicKeys(userId:keyType:index:)","abstract":"<p>This gets all public keys that match the user ID and type from the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC25getLatestActiveSigningKey6userId7keyType10PromiseKit0O0CyAA06PublicJ0VSgG10Foundation4UUIDV_0a7CryptoiC00jN0OtKF":{"name":"getLatestActiveSigningKey(userId:keyType:)","abstract":"<p>This gets the latest active public key that match the user ID and type from the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC9getEvents9eventType11containerId0jI005startK003endK010PromiseKit0N0CySayAA5EventVGGAA0pI0OSg_10Foundation4UUIDVSgSSSgSiSgAYtKF":{"name":"getEvents(eventType:containerId:containerType:startId:endId:)","abstract":"<p>Gets all ContainerEvents that match the action type, starting id, ending id, container id and type.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC5logIn7keyRing6userId10PromiseKit0L0CyytG0a7CryptoiC003KeyI0V_10Foundation4UUIDVtKF":{"name":"logIn(keyRing:userId:)","abstract":"<p>Uses the provided KeyRing to authenticate with the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC6logout10PromiseKit0G0CyytGyKF":{"name":"logout()","abstract":"<p>This will end an authenticated session.  The KeyRing and the authenticated credentials on the rest client","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC11getReminder6userId10PromiseKit0J0CySSG10Foundation4UUIDVSg_tKF":{"name":"getReminder(userId:)","abstract":"<p>Gets the reminder for a user.  The reminder can be used to help a user recall their passphrase.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC21createOrUpdateKeyFile03keyJ4Data8password10passphrase8reminder10PromiseKit0P0Cy10Foundation0L0VGAN_S3SSgtKF":{"name":"createOrUpdateKeyFile(keyFileData:password:passphrase:reminder:)","abstract":"<p>Creates or updates the KeyFile on the Absio Broker application.  The passphrase is used to securely store the KeyFile on the server.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC13deleteKeyFile10PromiseKit0I0CyytGyKF":{"name":"deleteKeyFile()","abstract":"<p>Deletes the authenticated user&rsquo;s KeyFile from the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC10getKeyFile10passphrase10PromiseKit0J0Cy10Foundation4DataVGSS_tKF":{"name":"getKeyFile(passphrase:)","abstract":"<p>Gets a user&rsquo;s KeyFile.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC17needToSyncAccount6userId11keyFileData10PromiseKit0O0CySbG10Foundation4UUIDV_AK0N0VtKF":{"name":"needToSyncAccount(userId:keyFileData:)","abstract":"<p>Checks if the encrypted KeyFile bytes are different on the Absio Broker application for the user.  This can be used to","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC8register8password10passphrase8reminder17completionHandler05errorK05queueACXDSS_S2SSgy10Foundation4DataVcys5Error_pcSo0c10_dispatch_M0CSgtF":{"name":"register(password:passphrase:reminder:completionHandler:errorHandler:queue:)","abstract":"<p>This will create a new user stored on the Absio Broker application.  A KeyRing and UserId will be created for the user.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC17changeCredentials8password10passphrase8reminder17completionHandler05errorL05queueACXDSS_S2SSgy10Foundation4DataVcys5Error_pcSo0c10_dispatch_N0CSgtF":{"name":"changeCredentials(password:passphrase:reminder:completionHandler:errorHandler:queue:)","abstract":"<p>This is used to change the password and/or passphrase of a user.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC5logIn6userId8password10passphrase17completionHandler05errorM05queueACXD10Foundation4UUIDV_SSSgANyAK4DataVcys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"logIn(userId:password:passphrase:completionHandler:errorHandler:queue:)","abstract":"<p>Authenticates the user with the Absio Broker application by decrypting the KeyFile.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC13getPublicKeys6userId7keyType5index17completionHandler05errorO05queueACXD10Foundation4UUIDVSg_0a7CryptoiC003KeyL0OSgSiSgySayAA0gU0VGcys5Error_pcSo0c10_dispatch_Q0CSgtKF":{"name":"getPublicKeys(userId:keyType:index:completionHandler:errorHandler:queue:)","abstract":"<p>This gets all public keys that match the user ID and type from the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC25getLatestActiveSigningKey6userId7keyType17completionHandler05errorP05queueACXD10Foundation4UUIDV_0a7CryptoiC00jN0OyAA06PublicJ0VSgcys5Error_pcSo0c10_dispatch_R0CSgtKF":{"name":"getLatestActiveSigningKey(userId:keyType:completionHandler:errorHandler:queue:)","abstract":"<p>This gets the latest active public key that match the user ID and type from the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC9getEvents9eventType11containerId0jI005startK003endK017completionHandler05errorO05queueACXDAA05EventI0OSg_10Foundation4UUIDVSgSSSgSiSgAUySayAA0R0VGcys5Error_pcSo0c10_dispatch_Q0CSgtKF":{"name":"getEvents(eventType:containerId:containerType:startId:endId:completionHandler:errorHandler:queue:)","abstract":"<p>Gets all ContainerEvents that match the action type, starting id, ending id, container id and type.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC5logIn7keyRing6userId17completionHandler05errorM05queueACXD0a7CryptoiC003KeyI0V_10Foundation4UUIDVyycys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"logIn(keyRing:userId:completionHandler:errorHandler:queue:)","abstract":"<p>Uses the provided KeyRing to authenticate with the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC11getReminder6userId17completionHandler05errorK05queueACXD10Foundation4UUIDVSg_ySScys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"getReminder(userId:completionHandler:errorHandler:queue:)","abstract":"<p>Gets the reminder for a user.  The reminder can be used to help a user recall their passphrase.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC21createOrUpdateKeyFile03keyJ4Data8password10passphrase8reminder17completionHandler05errorQ05queueACXD10Foundation0L0V_S3SSgyANcys5Error_pcSo0c10_dispatch_S0CSgtKF":{"name":"createOrUpdateKeyFile(keyFileData:password:passphrase:reminder:completionHandler:errorHandler:queue:)","abstract":"<p>Creates or updates the KeyFile on the Absio Broker application.  The passphrase is used to securely store the KeyFile on the server.","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC13deleteKeyFile17completionHandler05errorJ05queueACXDyyc_ys5Error_pcSo0c10_dispatch_L0CSgtKF":{"name":"deleteKeyFile(completionHandler:errorHandler:queue:)","abstract":"<p>Deletes the authenticated user&rsquo;s KeyFile from the Absio Broker application.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC10getKeyFile10passphrase17completionHandler05errorK05queueACXDSS_y10Foundation4DataVcys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"getKeyFile(passphrase:completionHandler:errorHandler:queue:)","abstract":"<p>Gets a user&rsquo;s KeyFile.</p>","parent_name":"ServerProvider"},"Classes/ServerProvider.html#/s:11AbsioSDKiOS14ServerProviderC17needToSyncAccount6userId11keyFileData17completionHandler05errorP05queueACXD10Foundation4UUIDV_AJ0N0VySbcys5Error_pcSo0c10_dispatch_R0CSgtKF":{"name":"needToSyncAccount(userId:keyFileData:completionHandler:errorHandler:queue:)","abstract":"<p>Checks if the encrypted KeyFile bytes are different on the Absio Broker application for the user.  This can be used to","parent_name":"ServerProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC013forceLoadFromD0Sbvp":{"name":"forceLoadFromServer","abstract":"<p>A flag that determines the usage of the OfsProvider as a source on read operations.  When true, this will skip the OfsProvider","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC6apiKey9serverUrl15applicationName16ofsRootDirectory19partitionDataByUserAC10Foundation4UUIDV_AI3URLVSSAMSbtKcfc":{"name":"init(apiKey:serverUrl:applicationName:ofsRootDirectory:partitionDataByUser:)","abstract":"<div class=\"aside aside-throws\">","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC5logIn6userId8password10passphrase10PromiseKit0N0Cy10Foundation4DataVGAK4UUIDV_SSSgAQtKF":{"name":"logIn(userId:password:passphrase:)","abstract":"<p>Authenticates the user by calling login on both the OfsProvider and the ServerProvider.  If the","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC5logIn7keyRing10PromiseKit0L0CyytG0a7CryptoiC003KeyK0V_tKF":{"name":"logIn(keyRing:)","abstract":"<p>Uses the provided KeyRing to authenticate with the Absio Broker application.</p>","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC8register8password10passphrase8reminder10PromiseKit0L0Cy10Foundation4DataVGSS_S2SSgtKF":{"name":"register(password:passphrase:reminder:)","abstract":"<p>Registers a user on the Absio Broker application and then in the OFS.","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC17changeCredentials8password10passphrase0K8Reminder10PromiseKit0M0Cy10Foundation4DataVGSS_S2SSgtKF":{"name":"changeCredentials(password:passphrase:passphraseReminder:)","abstract":"<p>This will change the credentials using the ServerProvider.  The resultant KeyFile bytes will be used to update the","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC10deleteUser10PromiseKit0J0CyytGyKF":{"name":"deleteUser()","abstract":"<p>Deletes all associated data for the authenticated user.  Calls DeleteUser on the ServerProvider and","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC9getEvents9eventType11containerId0lK005startM003endM010PromiseKit0P0CySayAA5EventVGGAA0rK0OSg_10Foundation4UUIDVSgSSSgSiSgAYtKF":{"name":"getEvents(eventType:containerId:containerType:startId:endId:)","abstract":"<p>This will call GetEvents on the ServerProvider.","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC11getReminder6userId10PromiseKit0L0CySSG10Foundation4UUIDVSg_tKF":{"name":"getReminder(userId:)","abstract":"<p>This will call GetReminder on the ServerProvider. Gets the reminder for a user.  The reminder can be used to help a user recall their passphrase. If the session is authenticated the user ID is not required.  If not supplied the authenticated user&rsquo;s ID will be used.</p>","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC17needToSyncAccount6userId10PromiseKit0N0CySbG10Foundation4UUIDV_tKF":{"name":"needToSyncAccount(userId:)","abstract":"<p>This will check to see if the KeyFile stored in the OFS differs from the KeyFile stored on the Absio Broker application.</p>","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC18synchronizeAccount10passphrase8password10PromiseKit0L0CyytGSS_SSSgtKF":{"name":"synchronizeAccount(passphrase:password:)","abstract":"<p>This pulls the KeyFile from the Absio Broker application, stores it into the OFS and then updates the KeyRing in use on the ServerProvider and the OfsProvider.</p>","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC6logout10PromiseKit0I0CyytGyKF":{"name":"logout()","abstract":"<p>This will end the authenticated session by calling Logout on the ServerProvider and the OfsProvider</p>","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC15createContainer7content12accessLevels4type10PromiseKit0N0CyAA07SecuredI0VG10Foundation4DataVSg_SayAA11AccessLevelCGSSSgtKF":{"name":"createContainer(content:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application, caches it in the OFS and returns it.","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC15createContainer7content18customHeaderObject12accessLevels4type10PromiseKit0Q0CyAA07SecuredI0VG10Foundation4DataVSg_xSgSayAA11AccessLevelCGSSSgtKSeRzSERzlF":{"name":"createContainer(content:customHeaderObject:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application, caches it in the OFS and returns it.","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC15deleteContainer11containerId10PromiseKit0L0CyytG10Foundation4UUIDV_tKF":{"name":"deleteContainer(containerId:)","abstract":"<p>Deletes the container with the given ID from the Absio Broker application and the OFS by calling Delete on the","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC21updateContainerHeader11containerId06customJ6Object10PromiseKit0O0CyAA07SecuredI0VG10Foundation4UUIDV_xSgtKSeRzSERzlF":{"name":"updateContainerHeader(containerId:customHeaderObject:)","abstract":"<p>Update the header of the secured container with the given ID on the Absio Broker application","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC22updateContainerContent11containerId7content10PromiseKit0N0CyAA07SecuredI0VG10Foundation4UUIDV_AM4DataVSgtKF":{"name":"updateContainerContent(containerId:content:)","abstract":"<p>Update the content of the secured container with the given ID on the Absio Broker application","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC15updateContainer11containerId7content18customHeaderObject12accessLevels4type10PromiseKit0S0CyAA07SecuredI0VG10Foundation4UUIDV_AP4DataVSgxSgSayAA11AccessLevelCGSSSgtKSeRzSERzlF":{"name":"updateContainer(containerId:content:customHeaderObject:accessLevels:type:)","abstract":"<p>Update the content, header, access and type of the secured container with the given ID on the Absio Broker application","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC27updateContainerAccessLevels11containerId06accessK010PromiseKit0O0CyytG10Foundation4UUIDV_SayAA0J5LevelCGtKF":{"name":"updateContainerAccessLevels(containerId:accessLevels:)","abstract":"<p>Update the access of the secured container with the given ID on the Absio Broker application","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC12getContainer11containerId10PromiseKit0L0CyAA0I0CG10Foundation4UUIDV_tKF":{"name":"getContainer(containerId:)","abstract":"<p>If the ForceLoadFromServer property is false this gets the Container from the OFS.  If the ForceLoadFromServer","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC18getContainerHeader11containerId10PromiseKit0M0Cy0a7CryptoiC00J0CSgG10Foundation4UUIDV_tKF":{"name":"getContainerHeader(containerId:)","abstract":"<p>If the ForceLoadFromServer property is false this gets the Container header from the OFS.  If the ForceLoadFromServer","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC19getContainerContent11containerId10PromiseKit0M0Cy10Foundation4DataVSgGAI4UUIDV_tKF":{"name":"getContainerContent(containerId:)","abstract":"<p>If the ForceLoadFromServer property is false this gets the Container content from the OFS.  If the ForceLoadFromServer","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC20getContainerMetadata11containerId10PromiseKit0M0CyAA0I0CG10Foundation4UUIDV_tKF":{"name":"getContainerMetadata(containerId:)","abstract":"<p>If the ForceLoadFromServer property is false this gets the Container content from the OFS.  If the ForceLoadFromServer","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC19updateContainerType11containerId4type10PromiseKit0N0CyytG10Foundation4UUIDV_SSSgtKF":{"name":"updateContainerType(containerId:type:)","abstract":"<p>Update the type of the secured container with the given ID on the Absio Broker application","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC5logIn6userId8password10passphrase17completionHandler05errorO05queueACXD10Foundation4UUIDV_SSSgANyAK4DataVcys5Error_pcSo0c10_dispatch_Q0CSgtKF":{"name":"logIn(userId:password:passphrase:completionHandler:errorHandler:queue:)","abstract":"<p>Authenticates the user by calling login on both the OfsProvider and the ServerProvider.  If the","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC5logIn7keyRing17completionHandler05errorM05queueACXD0a7CryptoiC003KeyK0V_yycys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"logIn(keyRing:completionHandler:errorHandler:queue:)","abstract":"<p>Uses the provided KeyRing to authenticate with the Absio Broker application.</p>","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC8register8password10passphrase8reminder17completionHandler05errorM05queueACXDSS_S2SSgy10Foundation4DataVcys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"register(password:passphrase:reminder:completionHandler:errorHandler:queue:)","abstract":"<p>Registers a user on the Absio Broker application and then in the OFS.","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC17changeCredentials8password10passphrase0K8Reminder17completionHandler05errorN05queueACXDSS_S2SSgy10Foundation4DataVcys5Error_pcSo0c10_dispatch_P0CSgtKF":{"name":"changeCredentials(password:passphrase:passphraseReminder:completionHandler:errorHandler:queue:)","abstract":"<p>This will change the credentials using the ServerProvider.  The resultant KeyFile bytes will be used to update the","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC9getEvents9eventType11containerId0lK005startM003endM017completionHandler05errorQ05queueACXDAA05EventK0OSg_10Foundation4UUIDVSgSSSgSiSgAUySayAA0T0VGcys5Error_pcSo0c10_dispatch_S0CSgtKF":{"name":"getEvents(eventType:containerId:containerType:startId:endId:completionHandler:errorHandler:queue:)","abstract":"<p>This will call GetEvents on the ServerProvider.","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC11getReminder6userId17completionHandler05errorM05queueACXD10Foundation4UUIDVSg_ySScys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"getReminder(userId:completionHandler:errorHandler:queue:)","abstract":"<p>This will call GetReminder on the ServerProvider. Gets the reminder for a user.  The reminder can be used to help a user recall their passphrase. If the session is authenticated the user ID is not required.  If not supplied the authenticated user&rsquo;s ID will be used.</p>","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC17needToSyncAccount6userId17completionHandler05errorO05queueACXD10Foundation4UUIDV_ySbcys5Error_pcSo0c10_dispatch_Q0CSgtKF":{"name":"needToSyncAccount(userId:completionHandler:errorHandler:queue:)","abstract":"<p>This will check to see if the KeyFile stored in the OFS differs from the KeyFile stored on the Absio Broker application.</p>","parent_name":"ServerCacheOfsProvider"},"Classes/ServerCacheOfsProvider.html#/s:11AbsioSDKiOS22ServerCacheOfsProviderC18synchronizeAccount10passphrase8password17completionHandler05errorM05queueACXDSS_SSSgyycys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"synchronizeAccount(passphrase:password:completionHandler:errorHandler:queue:)","abstract":"<p>This pulls the KeyFile from the Absio Broker application, stores it into the OFS and then updates the KeyRing in use on the ServerProvider and the OfsProvider.</p>","parent_name":"ServerCacheOfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC07defaultD3URL10Foundation0G0VvpZ":{"name":"defaultOfsURL","abstract":"<p>Gets defauld ofs url for iOs</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/defaultOfsURL":{"name":"defaultOfsURL","abstract":"<p>Gets defauld ofs url for macOs</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC19partitionDataByUserSbvp":{"name":"partitionDataByUser","abstract":"<p>If True the data in the OFS Is partitioned by user.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC16ofsRootDirectory10Foundation3URLVvp":{"name":"ofsRootDirectory","abstract":"<p>The root OFS directory.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC16ofsRootDirectory19partitionDataByUserAC10Foundation3URLV_Sbtcfc":{"name":"init(ofsRootDirectory:partitionDataByUser:)","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC21updateContainerHeader11containerId06customH6Object10PromiseKit0M0CyAA07SecuredG0VG10Foundation4UUIDV_xSgtKSeRzSERzlF":{"name":"updateContainerHeader(containerId:customHeaderObject:)","abstract":"<p>Update the header of the secured container with the given ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC22updateContainerContent11containerId7content10PromiseKit0L0CyAA07SecuredG0VG10Foundation4UUIDV_AM4DataVSgtKF":{"name":"updateContainerContent(containerId:content:)","abstract":"<p>Update the content of the secured container with the given ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC27updateContainerAccessLevels11containerId06accessI010PromiseKit0M0CyytG10Foundation4UUIDV_SayAA0H5LevelCGtKF":{"name":"updateContainerAccessLevels(containerId:accessLevels:)","abstract":"<p>Update the content of the secured container with the given ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC19updateContainerType11containerId4type10PromiseKit0L0CyytG10Foundation4UUIDV_SSSgtKF":{"name":"updateContainerType(containerId:type:)","abstract":"<p>Update the type of the secured container with the given ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC18getContainerHeader11containerId10PromiseKit0K0Cy0a7CryptoiC00H0CSgG10Foundation4UUIDV_tKF":{"name":"getContainerHeader(containerId:)","abstract":"<p>Gets the decrypted header of the secured container for the given ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC19getContainerContent11containerId10PromiseKit0K0Cy10Foundation4DataVSgGAI4UUIDV_tKF":{"name":"getContainerContent(containerId:)","abstract":"<p>Gets the decrypted content of the secured container for the given ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC15createContainer7content12accessLevels4type10PromiseKit0L0CyAA07SecuredG0VG10Foundation4DataVSg_SayAA11AccessLevelCGSSSgtKF":{"name":"createContainer(content:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer in the OFS and returns it.  Use the returned value to learn the assigned ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC15createContainer7content18customHeaderObject12accessLevels4type10PromiseKit0O0CyAA07SecuredG0VG10Foundation4DataVSg_xSgSayAA11AccessLevelCGSSSgtKSeRzSERzlF":{"name":"createContainer(content:customHeaderObject:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer in the OFS and returns it.  Use the returned value to learn the assigned ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC15createContainer07securedG010PromiseKit0I0CyAA07SecuredG0VGAJ_tKF":{"name":"createContainer(securedContainer:)","abstract":"<p>Persist the SecuredContainer as a new item in the OFS and returns it.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC23createOrUpdateContainer07securedI010PromiseKit0K0CyAA07SecuredI0VGAJ_tKF":{"name":"createOrUpdateContainer(securedContainer:)","abstract":"<p>This is a helper method to persists the SecuredContainer in the OFS.  It will determine","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC15deleteContainer11containerId10PromiseKit0J0CyytG10Foundation4UUIDV_tKF":{"name":"deleteContainer(containerId:)","abstract":"<p>Deletes the secured container with the given ID from the OFS.  The encrypted content and the record","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC12getContainer11containerId10PromiseKit0J0CyAA0G0CG10Foundation4UUIDV_tKF":{"name":"getContainer(containerId:)","abstract":"<p>Gets the SecuredContainer from the OFS (content, header and metadata),","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC20getContainerMetadata11containerId10PromiseKit0K0CyAA0G0CG10Foundation4UUIDV_tKF":{"name":"getContainerMetadata(containerId:)","abstract":"<p>Gets the ContainerMetadata of the secured container for the given ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC16getAllContainers10PromiseKit0I0CySay10Foundation4UUIDVGGyKF":{"name":"getAllContainers()","abstract":"<p>Get all available containers IDs","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC15updateContainer11containerId7content18customHeaderObject12accessLevels4type10PromiseKit0Q0CyAA07SecuredG0VG10Foundation4UUIDV_AP4DataVSgxSgSayAA11AccessLevelCGSSSgtKSeRzSERzlF":{"name":"updateContainer(containerId:content:customHeaderObject:accessLevels:type:)","abstract":"<p>Update the content, header, access and type of the secured container with the given ID.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC23createOrUpdatePublicKey06publicJ010PromiseKit0L0CyytGAA0iJ0V_tKF":{"name":"createOrUpdatePublicKey(publicKey:)","abstract":"<p>This is used to create or update public key metadata (including the key itself) in the OFS database of the authenticated user.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC24getLatestActivePublicKey6userId7keyType5index10PromiseKit0P0CyAA0iJ0VSgG10Foundation4UUIDV_0a7CryptoiC00jN0OSiSgtKF":{"name":"getLatestActivePublicKey(userId:keyType:index:)","abstract":"<p>This gets the latest active public key that match the user ID and type from the encrypted database in the OFS.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC13getPublicKeys6userId7keyType5index10PromiseKit0N0CySayAA0G3KeyVGG10Foundation4UUIDVSg_0a7CryptoiC00pL0OSgSiSgtKF":{"name":"getPublicKeys(userId:keyType:index:)","abstract":"<p>This gets all public keys that match the user ID type and index from the encrypted database in the OFS.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC16deletePublicKeys6userId7keyType5index10PromiseKit0N0CyytG10Foundation4UUIDV_0a7CryptoiC003KeyL0OSgSiSgtKF":{"name":"deletePublicKeys(userId:keyType:index:)","abstract":"<p>This deletes all public keys that match the user ID, type and index from the encrypted database in the OFS.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC8register8password10passphrase10PromiseKit0I0Cy10Foundation4DataVGSS_SStKF":{"name":"register(password:passphrase:)","abstract":"<p>This will create a new user stored in the OFS.  A KeyRing and UserId will be created for the user.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC5logIn6userId8password10passphrase10PromiseKit0L0Cy10Foundation4DataVGAK4UUIDV_SSSgAQtKF":{"name":"logIn(userId:password:passphrase:)","abstract":"<p>Authenticates the user locally by decrypting the KeyFile to get their KeyRing","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC5logIn7keyRing10PromiseKit0J0CyytG0a7CryptoiC003KeyI0V_tKF":{"name":"logIn(keyRing:)","abstract":"<p>Authenticates the user locally by logging into the encrypted database in the OFS.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC17changeCredentials8password10passphrase10PromiseKit0J0Cy10Foundation4DataVGSS_SStKF":{"name":"changeCredentials(password:passphrase:)","abstract":"<p>This is used to change the password and/or passphrase of a user.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC10deleteUser10PromiseKit0H0CyytGyKF":{"name":"deleteUser()","abstract":"<p>Deletes all associated data for the authenticated user.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC21createOrUpdateKeyFile09encryptediJ4Blob10PromiseKit0M0Cy10Foundation4DataVGAK_tKF":{"name":"createOrUpdateKeyFile(encryptedKeyFileBlob:)","abstract":"<p>Creates or updates the user&rsquo;s KeyFile bytes in the OFS, possibly creating both directory and file.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC10getKeyFile10PromiseKit0I0Cy10Foundation4DataVSgGyKF":{"name":"getKeyFile()","abstract":"<p>This will return the KeyFile for the passed in user from the OFS in its raw form (bytes).","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC13deleteKeyFile10PromiseKit0I0CyytGyKF":{"name":"deleteKeyFile()","abstract":"<p>Delete the users KeyFile from the OFS.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC6logout10PromiseKit0G0CyytGyKF":{"name":"logout()","abstract":"<p>This will end an authenticated session.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC15createContainer07securedG017completionHandler05errorJ05queueACXDAA07SecuredG0V_yAJcys5Error_pcSo0c10_dispatch_L0CSgtKF":{"name":"createContainer(securedContainer:completionHandler:errorHandler:queue:)","abstract":"<p>Persist the SecuredContainer as a new item in the OFS and returns it.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC16getAllContainers17completionHandler05errorJ05queueACXDySay10Foundation4UUIDVGc_ys5Error_pcSo0c10_dispatch_L0CSgtKF":{"name":"getAllContainers(completionHandler:errorHandler:queue:)","abstract":"<p>Get all available containers IDs","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC23createOrUpdatePublicKey06publicJ017completionHandler05errorM05queueACXDAA0iJ0V_yycys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"createOrUpdatePublicKey(publicKey:completionHandler:errorHandler:queue:)","abstract":"<p>This is used to create or update public key metadata (including the key itself) in the OFS database of the authenticated user.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC24getLatestActivePublicKey6userId7keyType5index17completionHandler05errorQ05queueACXD10Foundation4UUIDV_0a7CryptoiC00jN0OSiSgyAA0iJ0VSgcys5Error_pcSo0c10_dispatch_S0CSgtKF":{"name":"getLatestActivePublicKey(userId:keyType:index:completionHandler:errorHandler:queue:)","abstract":"<p>This gets the latest active public key that match the user ID and type from the encrypted database in the OFS.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC13getPublicKeys6userId7keyType5index17completionHandler05errorO05queueACXD10Foundation4UUIDVSg_0a7CryptoiC003KeyL0OSgSiSgySayAA0gU0VGcys5Error_pcSo0c10_dispatch_Q0CSgtKF":{"name":"getPublicKeys(userId:keyType:index:completionHandler:errorHandler:queue:)","abstract":"<p>This gets all public keys that match the user ID type and index from the encrypted database in the OFS.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC16deletePublicKeys6userId7keyType5index17completionHandler05errorO05queueACXD10Foundation4UUIDV_0a7CryptoiC003KeyL0OSgSiSgyycys5Error_pcSo0c10_dispatch_Q0CSgtKF":{"name":"deletePublicKeys(userId:keyType:index:completionHandler:errorHandler:queue:)","abstract":"<p>This deletes all public keys that match the user ID, type and index from the encrypted database in the OFS.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC8register8password10passphrase17completionHandler05errorJ05queueACXDSS_SSy10Foundation4DataVcys5Error_pcSo0c10_dispatch_L0CSgtKF":{"name":"register(password:passphrase:completionHandler:errorHandler:queue:)","abstract":"<p>This will create a new user stored in the OFS.  A KeyRing and UserId will be created for the user.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC5logIn6userId8password10passphrase17completionHandler05errorM05queueACXD10Foundation4UUIDV_SSSgANyAK4DataVcys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"logIn(userId:password:passphrase:completionHandler:errorHandler:queue:)","abstract":"<p>Authenticates the user locally by decrypting the KeyFile to get their KeyRing","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC5logIn7keyRing17completionHandler05errorK05queueACXD0a7CryptoiC003KeyI0V_yycys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"logIn(keyRing:completionHandler:errorHandler:queue:)","abstract":"<p>Authenticates the user locally by logging into the encrypted database in the OFS.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC17changeCredentials8password10passphrase17completionHandler05errorK05queueACXDSS_SSy10Foundation4DataVcys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"changeCredentials(password:passphrase:completionHandler:errorHandler:queue:)","abstract":"<p>This is used to change the password and/or passphrase of a user.","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC10getKeyFile17completionHandler05errorJ05queueACXDy10Foundation4DataVSgc_ys5Error_pcSo0c10_dispatch_L0CSgtKF":{"name":"getKeyFile(completionHandler:errorHandler:queue:)","abstract":"<p>This will return the KeyFile for the passed in user from the OFS in its raw form (bytes).","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC13deleteKeyFile17completionHandler05errorJ05queueACXDyyc_ys5Error_pcSo0c10_dispatch_L0CSgtKF":{"name":"deleteKeyFile(completionHandler:errorHandler:queue:)","abstract":"<p>Delete the users KeyFile from the OFS.</p>","parent_name":"OfsProvider"},"Classes/OfsProvider.html#/s:11AbsioSDKiOS11OfsProviderC21createOrUpdateKeyFile09encryptediJ4Blob17completionHandler05errorN05queueACXD10Foundation4DataV_yAKcys5Error_pcSo0c10_dispatch_P0CSgtKF":{"name":"createOrUpdateKeyFile(encryptedKeyFileBlob:completionHandler:errorHandler:queue:)","abstract":"<p>Creates or updates the user&rsquo;s KeyFile bytes in the OFS, possibly creating both directory and file.</p>","parent_name":"OfsProvider"},"Classes/Container.html#/s:11AbsioSDKiOS9ContainerC12accessLevelsSDy10Foundation4UUIDVAA11AccessLevelCGSgvp":{"name":"accessLevels","abstract":"<p>The User&rsquo;s access to a Container.</p>","parent_name":"Container"},"Classes/Container.html#/s:11AbsioSDKiOS9ContainerC17containerMetadataAA0dF0VSgvp":{"name":"containerMetadata","abstract":"<p>The metadata of the container.</p>","parent_name":"Container"},"Classes/Container.html#/s:11AbsioSDKiOS9ContainerC7content10Foundation4DataVSgvp":{"name":"content","abstract":"<p>The decrypted content of the container.</p>","parent_name":"Container"},"Classes/Container.html#/s:11AbsioSDKiOS9ContainerC6header0a7CryptoiC06HeaderCSgvp":{"name":"header","abstract":"<p>The decrypted custom header of the container</p>","parent_name":"Container"},"Classes/Container.html#/s:11AbsioSDKiOS9ContainerC12accessLevels9containerACSDy10Foundation4UUIDVAA11AccessLevelCGSg_AA0D8MetadataVSgtcfc":{"name":"init(accessLevels:container:)","parent_name":"Container"},"Classes/Container.html#/s:11AbsioSDKiOS9ContainerC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Returns a Boolean indicating whether the Containers are identical.</p>","parent_name":"Container"},"Classes/Container.html#/s:11AbsioSDKiOS9ContainerC4hash4intoys6HasherVz_tF":{"name":"hash(into:)","abstract":"<p>Hash value</p>","parent_name":"Container"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC10getKeyRing0a7CryptoiC00gH0VyKF":{"name":"getKeyRing()","abstract":"<p>The KeyRing for the authenticated user.  This will be null if the Provider is not authenticated.</p>","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC9getUserId10Foundation4UUIDVyKF":{"name":"getUserId()","abstract":"<p>Gets user id for current key ring</p>","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC15createContainer7content12accessLevels4type17completionHandler05errorM05queueACXD10Foundation4DataVSg_SayAA11AccessLevelCGSSSgyAA07SecuredG0Vcys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"createContainer(content:accessLevels:type:completionHandler:errorHandler:queue:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC15createContainer7content18customHeaderObject12accessLevels4type17completionHandler05errorP05queueACXD10Foundation4DataVSg_xSgSayAA11AccessLevelCGSSSgyAA07SecuredG0Vcys5Error_pcSo0c10_dispatch_R0CSgtKSeRzSERzlF":{"name":"createContainer(content:customHeaderObject:accessLevels:type:completionHandler:errorHandler:queue:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC21updateContainerHeader11containerId06customH6Object17completionHandler05errorN05queueACXD10Foundation4UUIDV_xSgyAA07SecuredG0Vcys5Error_pcSo0c10_dispatch_P0CSgtKSeRzSERzlF":{"name":"updateContainerHeader(containerId:customHeaderObject:completionHandler:errorHandler:queue:)","abstract":"<p>Update the header of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC22updateContainerContent11containerId7content17completionHandler05errorM05queueACXD10Foundation4UUIDV_AJ4DataVSgyAA07SecuredG0Vcys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"updateContainerContent(containerId:content:completionHandler:errorHandler:queue:)","abstract":"<p>Update the content of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC15updateContainer11containerId7content18customHeaderObject12accessLevels4type17completionHandler05errorR05queueACXD10Foundation4UUIDV_AM4DataVSgxSgSayAA11AccessLevelCGSSSgyAA07SecuredG0Vcys5Error_pcSo0c10_dispatch_T0CSgtKSeRzSERzlF":{"name":"updateContainer(containerId:content:customHeaderObject:accessLevels:type:completionHandler:errorHandler:queue:)","abstract":"<p>Update the content, header, access and type of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC27updateContainerAccessLevels11containerId06accessI017completionHandler05errorN05queueACXD10Foundation4UUIDV_SayAA0H5LevelCGyycys5Error_pcSo0c10_dispatch_P0CSgtKF":{"name":"updateContainerAccessLevels(containerId:accessLevels:completionHandler:errorHandler:queue:)","abstract":"<p>Update the access of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC12getContainer11containerId17completionHandler05errorK05queueACXD10Foundation4UUIDV_yAA0G0Ccys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"getContainer(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Fetches an container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC18getContainerHeader11containerId17completionHandler05errorL05queueACXD10Foundation4UUIDV_y0a7CryptoiC00H0CSgcys5Error_pcSo0c10_dispatch_N0CSgtKF":{"name":"getContainerHeader(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Gets the decrypted header for a secured container.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC19getContainerContent11containerId17completionHandler05errorL05queueACXD10Foundation4UUIDV_yAI4DataVSgcys5Error_pcSo0c10_dispatch_N0CSgtKF":{"name":"getContainerContent(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Gets the decrypted content for a secured container.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC20getContainerMetadata11containerId17completionHandler05errorL05queueACXD10Foundation4UUIDV_yAA0G0Ccys5Error_pcSo0c10_dispatch_N0CSgtKF":{"name":"getContainerMetadata(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Gets the metadata for a secured container.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC15deleteContainer11containerId17completionHandler05errorK05queueACXD10Foundation4UUIDV_yycys5Error_pcSo0c10_dispatch_M0CSgtKF":{"name":"deleteContainer(containerId:completionHandler:errorHandler:queue:)","abstract":"<p>Deletes the secured container with the given ID from the Absio Broker application.  The encrypted content and associated","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC19updateContainerType11containerId4type17completionHandler05errorM05queueACXD10Foundation4UUIDV_SSSgyycys5Error_pcSo0c10_dispatch_O0CSgtKF":{"name":"updateContainerType(containerId:type:completionHandler:errorHandler:queue:)","abstract":"<p>Update the type of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC6logout17completionHandler05errorH05queueACXDyyc_ys5Error_pcSo0c10_dispatch_J0CSgtKF":{"name":"logout(completionHandler:errorHandler:queue:)","abstract":"<p>This will end an authenticated session.  The KeyRing and the authenticated credentials on the rest client","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC10deleteUser17completionHandler05errorI05queueACXDyyc_ys5Error_pcSo0c10_dispatch_K0CSgtKF":{"name":"deleteUser(completionHandler:errorHandler:queue:)","abstract":"<p>Deletes all associated data for the authenticated user.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC15createContainer7content12accessLevels4type10PromiseKit0L0CyAA07SecuredG0VG10Foundation4DataVSg_SayAA11AccessLevelCGSSSgtKF":{"name":"createContainer(content:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC15createContainer7content18customHeaderObject12accessLevels4type10PromiseKit0O0CyAA07SecuredG0VG10Foundation4DataVSg_xSgSayAA11AccessLevelCGSSSgtKSeRzSERzlF":{"name":"createContainer(content:customHeaderObject:accessLevels:type:)","abstract":"<p>Creates and persists a new SecuredContainer on the Absio Broker application and returns it.  Use the returned value to learn the assigned ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC21updateContainerHeader11containerId06customH6Object10PromiseKit0M0CyAA07SecuredG0VG10Foundation4UUIDV_xSgtKSeRzSERzlF":{"name":"updateContainerHeader(containerId:customHeaderObject:)","abstract":"<p>Update the header of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC22updateContainerContent11containerId7content10PromiseKit0L0CyAA07SecuredG0VG10Foundation4UUIDV_AM4DataVSgtKF":{"name":"updateContainerContent(containerId:content:)","abstract":"<p>Update the content of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC15updateContainer11containerId7content18customHeaderObject12accessLevels4type10PromiseKit0Q0CyAA07SecuredG0VG10Foundation4UUIDV_AP4DataVSgxSgSayAA11AccessLevelCGSSSgtKSeRzSERzlF":{"name":"updateContainer(containerId:content:customHeaderObject:accessLevels:type:)","abstract":"<p>Update the content, header, access and type of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC27updateContainerAccessLevels11containerId06accessI010PromiseKit0M0CyytG10Foundation4UUIDV_SayAA0H5LevelCGtKF":{"name":"updateContainerAccessLevels(containerId:accessLevels:)","abstract":"<p>Update the access of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC12getContainer11containerId10PromiseKit0J0CyAA0G0CG10Foundation4UUIDV_tKF":{"name":"getContainer(containerId:)","abstract":"<p>Fetches an container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC18getContainerHeader11containerId10PromiseKit0K0Cy0a7CryptoiC00H0CSgG10Foundation4UUIDV_tKF":{"name":"getContainerHeader(containerId:)","abstract":"<p>Gets the decrypted header for a secured container.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC19getContainerContent11containerId10PromiseKit0K0Cy10Foundation4DataVSgGAI4UUIDV_tKF":{"name":"getContainerContent(containerId:)","abstract":"<p>Gets the decrypted content for a secured container.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC20getContainerMetadata11containerId10PromiseKit0K0CyAA0G0CG10Foundation4UUIDV_tKF":{"name":"getContainerMetadata(containerId:)","abstract":"<p>Gets the metadata for a secured container.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC15deleteContainer11containerId10PromiseKit0J0CyytG10Foundation4UUIDV_tKF":{"name":"deleteContainer(containerId:)","abstract":"<p>Deletes the secured container with the given ID from the Absio Broker application.  The encrypted content and associated","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC19updateContainerType11containerId4type10PromiseKit0L0CyytG10Foundation4UUIDV_SSSgtKF":{"name":"updateContainerType(containerId:type:)","abstract":"<p>Update the type of the secured container with the given ID.","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC6logout10PromiseKit0G0CyytGyKF":{"name":"logout()","abstract":"<p>This will end an authenticated session.  The KeyRing and the authenticated credentials on the rest client","parent_name":"BaseProvider"},"Classes/BaseProvider.html#/s:11AbsioSDKiOS12BaseProviderC10deleteUser10PromiseKit0H0CyytGyKF":{"name":"deleteUser()","abstract":"<p>Deletes all associated data for the authenticated user.","parent_name":"BaseProvider"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC9createdAt10Foundation4DateVSgvp":{"name":"createdAt","abstract":"<p>The Date this access was created.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC9createdBy10Foundation4UUIDVSgvp":{"name":"createdBy","abstract":"<p>The UUID of the user who created this access.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC9expiresAt10Foundation4DateVSgvp":{"name":"expiresAt","abstract":"<p>The date and time this access to the container expires.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC7keyBlobSSSgvp":{"name":"keyBlob","abstract":"<p>The encrypted blob used to decrypt the SecuredContainer.  This can only be decrypted by the userId user.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC10modifiedAt10Foundation4DateVSgvp":{"name":"modifiedAt","abstract":"<p>The Date this access was last modified.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC10modifiedBy10Foundation4UUIDVSgvp":{"name":"modifiedBy","abstract":"<p>The UUID of the user who last modified this access.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC11permissionsAA11PermissionsVSgvp":{"name":"permissions","abstract":"<p>The permissions this user is allowed to perform on this container.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC6userId10Foundation4UUIDVSgvp":{"name":"userId","abstract":"<p>The ID of the container this access corresponds to.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC8blobData10Foundation0G0VSgvp":{"name":"blobData","abstract":"<p>Gets the encrypted blob used to decrypt the SecuredContainer.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC6userId11permissions9expiresAtAC10Foundation4UUIDV_AA11PermissionsVSgAG4DateVSgtcfc":{"name":"init(userId:permissions:expiresAt:)","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC4hash4intoys6HasherVz_tF":{"name":"hash(into:)","abstract":"<p>The hash value.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html#/s:11AbsioSDKiOS11AccessLevelC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Returns a Boolean indicating whether the AccessLevels are identical.</p>","parent_name":"AccessLevel"},"Classes/AccessLevel.html":{"name":"AccessLevel","abstract":"<p>Describes a User&rsquo;s access to a Container."},"Classes/BaseProvider.html":{"name":"BaseProvider","abstract":"<p>Provides base functionality for provider instances.</p>"},"Classes/Container.html":{"name":"Container","abstract":"<p>This is the decrypted version of a SecuredContainer.  It has the content, header and metadata.  The content and header are not encrypted.</p>"},"Classes/OfsProvider.html":{"name":"OfsProvider","abstract":"<p>Provider that sources all data (containers, public keys, key files, users, etc from a local Obfuscating File System (OFS)."},"Classes/ServerCacheOfsProvider.html":{"name":"ServerCacheOfsProvider","abstract":"<p>Data provider that combines the ServerProvider and the OfsProvider.  The ServerProvider is treated and the main source for all data."},"Classes/ServerProvider.html":{"name":"ServerProvider","abstract":"<p>Provider that sources all data (containers, public keys, key files, users, etc from the Absio Broker"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}